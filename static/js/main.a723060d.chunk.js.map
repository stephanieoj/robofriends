{"version":3,"sources":["Components/Card.js","Components/CardList.js","Components/SearchBox.js","Components/Scroll.js","Components/ErrorBoundary.js","Container/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","src","width","height","alt","CardList","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOAeeA,EAbF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAe,EAARC,GACxB,OACI,sBAAKC,UAAU,wDAAf,UACI,qBAAKC,IAAG,+BAA0BJ,EAA1B,aAA2CK,MAAM,MAAMC,OAAO,MAAMC,IAAI,WAChF,gCACI,6BAAKP,IACL,4BAAIC,WCeLO,EApBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACjB,OACE,8BAEIA,EAAOC,KAAK,SAACC,EAAKC,GAChB,OACE,cAAC,EAAD,CAEEV,GAAIO,EAAOG,GAAGV,GACdF,KAAMS,EAAOG,GAAGZ,KAChBC,MAAOQ,EAAOG,GAAGX,OAHZW,SCIJC,EAZG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAClB,OACE,qBAAKX,UAAU,MAAf,SACE,uBAAOA,UAAU,mCACfY,KAAK,SACLC,YAAY,iBACZC,SAAUH,OCEHI,EARA,SAACC,GACd,OACE,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBhB,OAAQ,SAArE,SACGa,EAAMI,YCiBEC,E,kDAnBb,WAAYL,GAAQ,IAAD,8BACjB,cAAMA,IACDM,MAAQ,CACXC,UAAU,GAHK,E,8DAODC,EAAOC,GACvBC,KAAKC,SAAS,CAACJ,UAAU,M,+BAIzB,OAAIG,KAAKJ,MAAMC,SACN,gEAEFG,KAAKV,MAAMI,a,GAhBMQ,aCiDbC,G,wDA1Cb,aAAe,IAAD,8BACZ,gBAaFC,eAAiB,SAACC,GAChB,EAAKJ,SAAS,CAACK,YAAaD,EAAME,OAAOC,SAbzC,EAAKZ,MAAQ,CACXhB,OAAQ,GACR0B,YAAa,IAJH,E,gEAQO,IAAD,OAClBG,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKZ,SAAS,CAACrB,OAAQiC,S,+BAO7B,IAAD,EACsBb,KAAKJ,MAA5BhB,EADC,EACDA,OAAQ0B,EADP,EACOA,YACTQ,EAAiBlC,EAAOmC,QAC5B,SAAAC,GACE,OAAOA,EAAM7C,KAAK8C,cAAcC,SAASZ,EAAYW,kBAIzD,OAAQrC,EAAOuC,OAGX,sBAAK7C,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWW,aAAce,KAAKI,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAUxB,OAAQkC,WAP1B,oBAAIxC,UAAU,QAAd,4B,GA5BY4B,cCIHkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACN,cAAC,EAAD,IACCC,SAASC,eAAe,SAE5BX,M","file":"static/js/main.a723060d.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({name, email, id}) => {\n    return(\n        <div className='tc bg-lightest-blue dib br3 pa3 ma2 grow bw2 shadow-5'>\n            <img src={`https://robohash.org/${name}?set=set4`} width='200' height='200' alt='robots'/>\n            <div>\n                <h3>{name}</h3>\n                <p>{email}</p>\n            </div>\n        </div>\n    );\n}\n\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({robots}) => {\n  return (\n    <div> \n       {\n        robots.map( (user,i) => {\n          return (\n            <Card \n              key={i}\n              id={robots[i].id}\n              name={robots[i].name}\n              email={robots[i].email}\n            />\n          );\n        }\n      )\n    }\n    </div>\n  );\n}\n\nexport default CardList;\n\n","import React from 'react';\n\nconst SearchBox = ({searchChange}) => {\n  return (\n    <div className='pa2'>\n      <input className='pa3 ba b--green bg-lightest-blue'\n        type='search' \n        placeholder='Search Friends' \n        onChange={searchChange}\n      />\n    </div>\n  );\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n  return (\n    <div style={{overflowY: 'scroll', border: '1px solid black', height: '700px'}}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Scroll;","import React, { Component } from 'react';\n\nclass ErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false\n    }\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({hasError: true})\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <h1>Oooops...Something went wrong!</h1>\n    }\n    return this.props.children\n  }\n}\n\nexport default ErrorBoundary;","import React, { Component } from 'react';\nimport CardList from '../Components/CardList';\nimport SearchBox from '../Components/SearchBox';\nimport Scroll from '../Components/Scroll';\nimport ErrorBoundary from '../Components/ErrorBoundary';\nimport './App.css'\n\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      robots: [],\n      searchfield: ''\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({robots: users}))\n  }\n\n  onSearchChange = (event) => {\n    this.setState({searchfield: event.target.value})\n  }\n\n  render () { \n    const {robots, searchfield} = this.state;\n    const filteredRobots = robots.filter(\n      robot => {\n        return robot.name.toLowerCase().includes(searchfield.toLowerCase()) \n      }\n    )\n\n    return !robots.length ? \n      <h1 className='tc f1'>Loading...</h1> :\n       (\n        <div className='tc'>\n          <h1 className='f1'>RoboFriends</h1>\n          <SearchBox searchChange={this.onSearchChange}/>\n          <Scroll>\n            <ErrorBoundary> \n              <CardList robots={filteredRobots} />  \n            </ErrorBoundary>\n          </Scroll>\n        </div>\n      );\n    }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Container/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render( \n   <App />\n  , document.getElementById('root'));\n\nreportWebVitals();\n"],"sourceRoot":""}